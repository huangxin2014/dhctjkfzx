<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.model.User" >
    <id column="USERID_" property="userid" jdbcType="INTEGER" />
    <result column="NAME_" property="name" jdbcType="VARCHAR" />
    <result column="ROLEID_" property="roleid" jdbcType="INTEGER" />
    <result column="HOMETOWN_" property="hometown" jdbcType="VARCHAR" />
    <result column="EMAIL_" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD_" property="password" jdbcType="VARCHAR" />
    <result column="BIRTH_" property="birth" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    USERID_, NAME_, ROLEID_, HOMETOWN_, EMAIL_, PASSWORD_, BIRTH_
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where USERID_ = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where USERID_ = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.model.User" >
    insert into t_user (USERID_, NAME_, ROLEID_, 
      HOMETOWN_, EMAIL_, PASSWORD_, 
      BIRTH_)
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, 
      #{hometown,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{birth,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        USERID_,
      </if>
      <if test="name != null" >
        NAME_,
      </if>
      <if test="roleid != null" >
        ROLEID_,
      </if>
      <if test="hometown != null" >
        HOMETOWN_,
      </if>
      <if test="email != null" >
        EMAIL_,
      </if>
      <if test="password != null" >
        PASSWORD_,
      </if>
      <if test="birth != null" >
        BIRTH_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="hometown != null" >
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.model.User" >
    update t_user
    <set >
      <if test="name != null" >
        NAME_ = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        ROLEID_ = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="hometown != null" >
        HOMETOWN_ = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL_ = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD_ = #{password,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        BIRTH_ = #{birth,jdbcType=VARCHAR},
      </if>
    </set>
    where USERID_ = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.model.User" >
    update t_user
    set NAME_ = #{name,jdbcType=VARCHAR},
      ROLEID_ = #{roleid,jdbcType=INTEGER},
      HOMETOWN_ = #{hometown,jdbcType=VARCHAR},
      EMAIL_ = #{email,jdbcType=VARCHAR},
      PASSWORD_ = #{password,jdbcType=VARCHAR},
      BIRTH_ = #{birth,jdbcType=VARCHAR}
    where USERID_ = #{userid,jdbcType=INTEGER}
  </update>
  
  <!-- select中的id对应interface中的方法名;resultMap和resultType只能有一个 -->
  <select id="getAll" resultMap="BaseResultMap">
  	select * from t_user
  </select>
  
  <!-- select中的id对应interface中的方法名;resultMap和resultType只能有一个 -->
  <select id="isExistUser" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from t_user where EMAIL_ = #{0} and PASSWORD_ = #{1}
  </select>
</mapper>